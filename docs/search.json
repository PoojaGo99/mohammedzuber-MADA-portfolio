[
  {
    "objectID": "synthetic-data-exercise/synthetic-data-exercise.html",
    "href": "synthetic-data-exercise/synthetic-data-exercise.html",
    "title": "Synthetic Data Exercise",
    "section": "",
    "text": "For this exercise, I simulated synthetic data for a cancer treatment cohort to study the associations between patient characteristics and treatment outcomes. The dataset includes 500 patients receiving one of four treatments: Chemotherapy, Immunotherapy, Targeted Therapy, or CAR-T Therapy.\nThe following variables are included:\nPatientID – Unique identifier for each patient. Age – Age at cancer diagnosis (years). Sex – Male or Female. FamilyHistory – Whether the patient has a family history of cancer (binary). SmokingStatus – Whether the patient is a current smoker (binary). BMI – Patient’s Body Mass Index (BMI). OS_Months – Overall survival in months, influenced by patient characteristics and treatment type. PFS_Months – Progression-free survival, derived as a proportion of OS. CompleteResponse (CR) – Binary variable indicating if the patient achieved a complete response to treatment. AdverseEvent (ADR) – Binary variable indicating if the patient experienced an adverse event."
  },
  {
    "objectID": "synthetic-data-exercise/synthetic-data-exercise.html#introduction",
    "href": "synthetic-data-exercise/synthetic-data-exercise.html#introduction",
    "title": "Synthetic Data Exercise",
    "section": "",
    "text": "For this exercise, I simulated synthetic data for a cancer treatment cohort to study the associations between patient characteristics and treatment outcomes. The dataset includes 500 patients receiving one of four treatments: Chemotherapy, Immunotherapy, Targeted Therapy, or CAR-T Therapy.\nThe following variables are included:\nPatientID – Unique identifier for each patient. Age – Age at cancer diagnosis (years). Sex – Male or Female. FamilyHistory – Whether the patient has a family history of cancer (binary). SmokingStatus – Whether the patient is a current smoker (binary). BMI – Patient’s Body Mass Index (BMI). OS_Months – Overall survival in months, influenced by patient characteristics and treatment type. PFS_Months – Progression-free survival, derived as a proportion of OS. CompleteResponse (CR) – Binary variable indicating if the patient achieved a complete response to treatment. AdverseEvent (ADR) – Binary variable indicating if the patient experienced an adverse event."
  },
  {
    "objectID": "synthetic-data-exercise/synthetic-data-exercise.html#generate-synthetic-data",
    "href": "synthetic-data-exercise/synthetic-data-exercise.html#generate-synthetic-data",
    "title": "Synthetic Data Exercise",
    "section": "2 Generate Synthetic Data**",
    "text": "2 Generate Synthetic Data**\n\n# Number of patients\nnum_patients &lt;- 500  \n\n# Define treatment groups\ntreatment_groups &lt;- c(\"Chemotherapy\", \"Immunotherapy\", \"Targeted Therapy\", \"CAR-T Therapy\")\n\n# Generate patient IDs\npatient_ids &lt;- 1:num_patients\n\n# Assign patients randomly to a treatment group\ntreatment_assignments &lt;- sample(treatment_groups, num_patients, replace = TRUE)\n\n# Generate baseline characteristics\nage &lt;- rnorm(num_patients, mean = 60, sd = 12)  # Age at diagnosis (Normal distribution)\nsex &lt;- sample(c(\"Male\", \"Female\"), num_patients, replace = TRUE)  # Gender\nfamily_history &lt;- rbinom(num_patients, 1, prob = 0.3)  # 30% with family history\nsmoking_status &lt;- rbinom(num_patients, 1, prob = 0.25)  # 25% current smokers\nbmi &lt;- rnorm(num_patients, mean = 27, sd = 5)  # BMI (Normal distribution)\n\n# Function to generate Overall Survival (OS) based on characteristics\ngenerate_os &lt;- function(age, smoking, family_history, treatment) {\n  base_os &lt;- 36 - (age * 0.3) - (smoking * 5) + (family_history * 2)\n  treatment_effect &lt;- ifelse(treatment == \"Chemotherapy\", -5, \n                      ifelse(treatment == \"Immunotherapy\", 2, \n                      ifelse(treatment == \"Targeted Therapy\", 4, 7)))\n  return(base_os + treatment_effect + rnorm(1, mean = 0, sd = 5))\n}\n\n# Function to generate PFS as a fraction of OS\ngenerate_pfs &lt;- function(os) {\n  return(runif(1, min = os * 0.4, max = os * 0.8))\n}\n\n# Function to generate Complete Response (CR)\ngenerate_cr &lt;- function(age, bmi, treatment) {\n  prob_cr &lt;- plogis(-0.05 * age + 0.03 * (30 - bmi) + \n                    ifelse(treatment == \"Chemotherapy\", -0.2, \n                    ifelse(treatment == \"Immunotherapy\", 0.1, \n                    ifelse(treatment == \"Targeted Therapy\", 0.2, 0.4))))\n  return(rbinom(1, 1, prob = prob_cr))\n}\n\n# Function to generate Adverse Drug Reaction (ADR)\ngenerate_adr &lt;- function(age, smoking, bmi, treatment) {\n  prob_adr &lt;- plogis(0.03 * age + 0.1 * smoking + 0.02 * bmi + \n                     ifelse(treatment == \"Chemotherapy\", 0.3, \n                     ifelse(treatment == \"Immunotherapy\", 0.1, \n                     ifelse(treatment == \"Targeted Therapy\", 0.05, -0.1))))\n  return(rbinom(1, 1, prob = prob_adr))\n}\n\n# Create dataset\ncancer_data &lt;- data.frame(\n  PatientID = patient_ids,\n  TreatmentGroup = treatment_assignments,\n  Age = age,\n  Sex = sex,\n  FamilyHistory = family_history,\n  SmokingStatus = smoking_status,\n  BMI = bmi,\n  OS_Months = mapply(generate_os, age, smoking_status, family_history, treatment_assignments),\n  PFS_Months = NA,  # Placeholder\n  CompleteResponse = mapply(generate_cr, age, bmi, treatment_assignments),\n  AdverseEvent = mapply(generate_adr, age, smoking_status, bmi, treatment_assignments)\n)\n\n# Generate PFS values based on OS\ncancer_data$PFS_Months &lt;- mapply(generate_pfs, cancer_data$OS_Months)\n\nWarning in runif(1, min = os * 0.4, max = os * 0.8): NAs produced\nWarning in runif(1, min = os * 0.4, max = os * 0.8): NAs produced\nWarning in runif(1, min = os * 0.4, max = os * 0.8): NAs produced\n\n# Ensure PFS is not greater than OS\ncancer_data$PFS_Months &lt;- pmin(cancer_data$PFS_Months, cancer_data$OS_Months)\n\n# Print summary of dataset\nsummary(cancer_data)\n\n   PatientID     TreatmentGroup          Age            Sex           \n Min.   :  1.0   Length:500         Min.   :26.28   Length:500        \n 1st Qu.:125.8   Class :character   1st Qu.:52.76   Class :character  \n Median :250.5   Mode  :character   Median :60.79   Mode  :character  \n Mean   :250.5                      Mean   :60.26                     \n 3rd Qu.:375.2                      3rd Qu.:68.54                     \n Max.   :500.0                      Max.   :92.30                     \n                                                                      \n FamilyHistory   SmokingStatus        BMI          OS_Months     \n Min.   :0.000   Min.   :0.000   Min.   :11.76   Min.   :-3.548  \n 1st Qu.:0.000   1st Qu.:0.000   1st Qu.:23.94   1st Qu.:13.571  \n Median :0.000   Median :0.000   Median :27.22   Median :18.647  \n Mean   :0.294   Mean   :0.254   Mean   :27.29   Mean   :18.514  \n 3rd Qu.:1.000   3rd Qu.:1.000   3rd Qu.:31.29   3rd Qu.:23.787  \n Max.   :1.000   Max.   :1.000   Max.   :43.45   Max.   :38.456  \n                                                                 \n   PFS_Months       CompleteResponse  AdverseEvent\n Min.   : 0.09179   Min.   :0.000    Min.   :0.0  \n 1st Qu.: 7.68231   1st Qu.:0.000    1st Qu.:1.0  \n Median :10.83721   Median :0.000    Median :1.0  \n Mean   :11.17130   Mean   :0.056    Mean   :0.9  \n 3rd Qu.:14.35966   3rd Qu.:0.000    3rd Qu.:1.0  \n Max.   :29.08082   Max.   :1.000    Max.   :1.0  \n NA's   :3"
  },
  {
    "objectID": "synthetic-data-exercise/synthetic-data-exercise.html#table-summary-statistics-by-treatment-group",
    "href": "synthetic-data-exercise/synthetic-data-exercise.html#table-summary-statistics-by-treatment-group",
    "title": "Synthetic Data Exercise",
    "section": "3 Table: Summary Statistics by Treatment Group",
    "text": "3 Table: Summary Statistics by Treatment Group\n\ncancer_data %&gt;%\n  group_by(TreatmentGroup) %&gt;%\n  summarise(\n    Median_OS = median(OS_Months),\n    Median_PFS = median(PFS_Months),\n    CR_Rate = mean(CompleteResponse) * 100,\n    ADR_Rate = mean(AdverseEvent) * 100\n  )\n\n# A tibble: 4 × 5\n  TreatmentGroup   Median_OS Median_PFS CR_Rate ADR_Rate\n  &lt;chr&gt;                &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 CAR-T Therapy         24.2       14.0    8.41     86.9\n2 Chemotherapy          12.9       NA      2.86     90.7\n3 Immunotherapy         17.9       10.6    4.55     93.9\n4 Targeted Therapy      20.5       11.5    7.44     87.6"
  },
  {
    "objectID": "synthetic-data-exercise/synthetic-data-exercise.html#exploratory-data-analysis",
    "href": "synthetic-data-exercise/synthetic-data-exercise.html#exploratory-data-analysis",
    "title": "Synthetic Data Exercise",
    "section": "4 Exploratory Data Analysis**",
    "text": "4 Exploratory Data Analysis**\n\n# Boxplot: OS by Treatment Group\nggplot(cancer_data, aes(x = TreatmentGroup, y = OS_Months, fill = TreatmentGroup)) +\n  geom_boxplot() +\n  labs(title = \"Overall Survival by Treatment Group\",\n       x = \"Treatment Group\",\n       y = \"Overall Survival (Months)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# Proportion of Complete Response by Treatment Group\nggplot(cancer_data, aes(x = TreatmentGroup, fill = as.factor(CompleteResponse))) +\n  geom_bar(position = \"fill\") +\n  labs(title = \"Proportion of Complete Response by Treatment Group\",\n       x = \"Treatment Group\",\n       y = \"Proportion\",\n       fill = \"Complete Response\") +\n  theme_minimal()\n\n\n\n\n\n\n\n# Bar chart: Proportion of Adverse Events\nggplot(cancer_data, aes(x = TreatmentGroup, fill = as.factor(AdverseEvent))) +\n  geom_bar(position = \"fill\") +\n  labs(title = \"Proportion of Adverse Events by Treatment Group\",\n       x = \"Treatment Group\",\n       y = \"Proportion\",\n       fill = \"Adverse Event\") +\n  theme_minimal()"
  },
  {
    "objectID": "synthetic-data-exercise/synthetic-data-exercise.html#fit-models-to-recover-associations",
    "href": "synthetic-data-exercise/synthetic-data-exercise.html#fit-models-to-recover-associations",
    "title": "Synthetic Data Exercise",
    "section": "5 Fit Models to Recover Associations**",
    "text": "5 Fit Models to Recover Associations**\n\n5.1 Linear Regression: Predicting OS\n\nlm_os &lt;- lm(OS_Months ~ Age + SmokingStatus + FamilyHistory + BMI + TreatmentGroup, data = cancer_data)\nsummary(lm_os)\n\n\nCall:\nlm(formula = OS_Months ~ Age + SmokingStatus + FamilyHistory + \n    BMI + TreatmentGroup, data = cancer_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.0114  -3.0866  -0.1629   3.1153  15.4615 \n\nCoefficients:\n                                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                     42.492845   1.678880  25.310  &lt; 2e-16 ***\nAge                             -0.282423   0.017469 -16.167  &lt; 2e-16 ***\nSmokingStatus                   -5.044392   0.487063 -10.357  &lt; 2e-16 ***\nFamilyHistory                    1.047145   0.465500   2.250   0.0249 *  \nBMI                             -0.009552   0.041105  -0.232   0.8163    \nTreatmentGroupChemotherapy     -11.866959   0.604106 -19.644  &lt; 2e-16 ***\nTreatmentGroupImmunotherapy     -5.600693   0.611567  -9.158  &lt; 2e-16 ***\nTreatmentGroupTargeted Therapy  -3.821539   0.622731  -6.137 1.73e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.681 on 492 degrees of freedom\nMultiple R-squared:  0.615, Adjusted R-squared:  0.6095 \nF-statistic: 112.3 on 7 and 492 DF,  p-value: &lt; 2.2e-16\n\n\nAge and smoking significantly reduce overall survival (OS), while family history slightly improves it. BMI has no significant effect on OS. Chemotherapy shows the worst survival outcomes, followed by immunotherapy and targeted therapy. CAR-T therapy provides the best survival benefit, confirming its superior effectiveness.\n\n\n5.2 Logistic Regression: Predicting Adverse Events\n\nglm_adr &lt;- glm(AdverseEvent ~ Age + SmokingStatus + BMI + TreatmentGroup, \n               data = cancer_data, family = binomial)\nsummary(glm_adr)\n\n\nCall:\nglm(formula = AdverseEvent ~ Age + SmokingStatus + BMI + TreatmentGroup, \n    family = binomial, data = cancer_data)\n\nCoefficients:\n                               Estimate Std. Error z value Pr(&gt;|z|)  \n(Intercept)                    -0.06236    1.15784  -0.054   0.9570  \nAge                             0.03073    0.01254   2.451   0.0142 *\nSmokingStatus                   0.20456    0.36370   0.562   0.5738  \nBMI                             0.00394    0.02888   0.136   0.8915  \nTreatmentGroupChemotherapy      0.42326    0.41342   1.024   0.3059  \nTreatmentGroupImmunotherapy     0.80175    0.46850   1.711   0.0870 .\nTreatmentGroupTargeted Therapy  0.07748    0.40299   0.192   0.8475  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 325.08  on 499  degrees of freedom\nResidual deviance: 314.21  on 493  degrees of freedom\nAIC: 328.21\n\nNumber of Fisher Scoring iterations: 5\n\n\nAge is the only significant predictor, with older patients having a higher likelihood of experiencing ADRs. Smoking and BMI do not show a meaningful impact on ADR risk. While treatment effects are not strongly significant, immunotherapy shows a potential trend toward increased ADR risk compared to CAR-T therapy. Further research is needed to identify additional risk factors, such as comorbidities and genetic predisposition."
  },
  {
    "objectID": "synthetic-data-exercise/synthetic-data-exercise.html#save-data",
    "href": "synthetic-data-exercise/synthetic-data-exercise.html#save-data",
    "title": "Synthetic Data Exercise",
    "section": "6 Save Data**",
    "text": "6 Save Data**\n\n# Save the simulated data to a CSV and Rds file\nwrite.csv(cancer_data, here(\"synthetic-data-exercise\",\"data\",\"data.csv\"), row.names = FALSE)"
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "The structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\nAnnalise Cramer contributed to this exercise."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section. I added two variables. The first variable is BMI, I calculated BMI using height and weight wherever available, left blank if i could not calculate. The second is the categorical variable on marital status which can be coded as married, single, divorced. ## Questions/Hypotheses to be addressed State the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\ncharacter.min\ncharacter.max\ncharacter.empty\ncharacter.n_unique\ncharacter.whitespace\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\ncharacter\nMarital_status\n0\n1\n6\n8\n0\n3\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nfactor\nGender\n0\n1\nNA\nNA\nNA\nNA\nNA\nFALSE\n3\nM: 4, F: 2, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n163.50000\n15.602198\n133.00\n155.5000\n166.000\n175.7500\n180.00\n▂▁▅▅▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n72.00000\n21.889332\n45.00\n53.7500\n73.000\n82.5000\n110.00\n▇▂▅▂▂\n\n\nnumeric\nBMI\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n26.85875\n7.416215\n19.95\n22.4075\n24.335\n28.3175\n39.91\n▇▇▁▁▅"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nTable 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#new-table-and-figures",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#new-table-and-figures",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.4 New table and figures",
    "text": "5.4 New table and figures\nTable 3 shows a summary of a linear model fit.\n\n\n\n\nTable 3: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n116.168986\n10.5840194\n10.975886\n0.0003915\n\n\nBMI\n2.136535\n0.4827628\n4.425641\n0.0114607\n\n\nMarital_statusmarried\n10.562688\n5.0794714\n2.079486\n0.1060847\n\n\nMarital_statussingle\n-37.372404\n8.1411523\n-4.590554\n0.0101026\n\n\n\n\n\n\n\n\nThe results from the linear regression model shows that for every unit increase in the BMI the height increases by 2.14 cm controlling to marital status (p-value: 0.011). Similarly being single was associated with a decrease of 37.37 cm in height compared to the divorced(p-value: 0.010). However being married was associated with an increase of 10.56 cm in height compared to divorced which was not statistically significant(p-value: 0.10).\nFigure 2 shows a boxplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 2: Height by marital status.\n\n\n\n\n\nThe boxplot shows the distribution of height across different marital status groups.Individuals who are married have highest median height with less variability. However, individual who are single are having less median height.\nFigure 3 shows a scatter plot produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 3: Scatter plot weight and bmi.\n\n\n\n\n\nThe scatter plot shows a relationship between BMI and weight. As BMI increases, weight also tends to increase."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile2.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at C:/Users/LibraryUser/Documents/GitHub/mohammedzuber-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 5 × 3\n  `Variable Name` `Variable Definition`                   `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                   &lt;chr&gt;                 \n1 Height          height in centimeters                   numeric value &gt;0 or NA\n2 Weight          weight in kilograms                     numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other)   M/F/O/NA              \n4 BMI             body mass index                         numeric value &gt;0 or NA\n5 Marital status  identified as (married/single/divorced) married/single/divorc…\n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 5\n$ Height           &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166…\n$ Weight           &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55…\n$ Gender           &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F…\n$ BMI              &lt;dbl&gt; 24.69, 22.85, NA, 23.98, 24.41, 15277.77, 36.98, 39.9…\n$ `Marital status` &lt;chr&gt; \"married\", \"married\", \"married\", \"married\", \"married\"…\n\nsummary(rawdata)\n\n    Height              Weight          Gender               BMI          \n Length:14          Min.   :  45.0   Length:14          Min.   :   19.95  \n Class :character   1st Qu.:  55.0   Class :character   1st Qu.:   22.66  \n Mode  :character   Median :  70.0   Mode  :character   Median :   24.41  \n                    Mean   : 602.7                      Mean   : 1412.68  \n                    3rd Qu.:  90.0                      3rd Qu.:   31.20  \n                    Max.   :7000.0                      Max.   :15277.77  \n                    NA's   :1                           NA's   :3         \n Marital status    \n Length:14         \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nhead(rawdata)\n\n# A tibble: 6 × 5\n  Height Weight Gender     BMI `Marital status`\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;           \n1 180        80 M         24.7 married         \n2 175        70 O         22.8 married         \n3 sixty      60 F         NA   married         \n4 178        76 F         24.0 married         \n5 192        90 NA        24.4 married         \n6 6          55 F      15278.  married         \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMarital status\n0\n1\n6\n8\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45.00\n55.00\n70.00\n90.0\n7000.00\n▇▁▁▁▁\n\n\nBMI\n3\n0.79\n1412.68\n4598.53\n19.95\n22.66\n24.41\n31.2\n15277.77\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMarital status\n0\n1\n6\n8\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6.00\n154.00\n165.00\n175.0\n192.00\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45.00\n54.75\n73.00\n90.0\n7000.00\n▇▁▁▁▁\n\n\nBMI\n2\n0.85\n1412.68\n4598.53\n19.95\n22.66\n24.41\n31.2\n15277.77\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMarital status\n0\n1\n6\n8\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133.00\n155.00\n166.00\n178.0\n192.00\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45.00\n54.75\n73.00\n90.0\n7000.00\n▇▁▁▁▁\n\n\nBMI\n2\n0.85\n1412.68\n4598.53\n19.95\n22.66\n24.41\n31.2\n15277.77\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\nMarital status\n0\n1\n6\n8\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133.00\n155.50\n166.00\n179.0\n192.00\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45.00\n54.50\n70.00\n85.0\n110.00\n▇▂▃▃▂\n\n\nBMI\n0\n1\n1412.68\n4598.53\n19.95\n22.66\n24.41\n31.2\n15277.77\n▇▁▁▁▁\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nMarital status\n0\n1\n6\n8\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133.00\n155.50\n166.00\n179.0\n192.00\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45.00\n54.50\n70.00\n85.0\n110.00\n▇▂▃▃▂\n\n\nBMI\n0\n1\n1412.68\n4598.53\n19.95\n22.66\n24.41\n31.2\n15277.77\n▇▁▁▁▁\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nMarital status\n0\n1\n6\n8\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133.00\n156.00\n166.00\n178.00\n183.00\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45.00\n55.00\n70.00\n80.00\n110.00\n▇▂▃▂▂\n\n\nBMI\n0\n1\n1721.40\n5083.64\n19.95\n22.85\n24.69\n36.98\n15277.77\n▇▁▁▁▁\n\n\n\n\n\nNow, onto my part of 1/16/2025. Let’s View the data to see if there’s any leftover issues.\n\nView(d4)\n\nLooks like observation 4 has an insanely high BMI of 15277.77. That doesn’t make sense, so let’s remove this observation.\n\nd5 &lt;- d4 |&gt;\n  dplyr::filter(BMI != 15277.77)\nskimr::skim(d5)\n\n\nData summary\n\n\nName\nd5\n\n\nNumber of rows\n8\n\n\nNumber of columns\n5\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nfactor\n1\n\n\nnumeric\n3\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nMarital status\n0\n1\n6\n8\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 2, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n163.50\n15.60\n133.00\n155.50\n166.00\n175.75\n180.00\n▂▁▅▅▇\n\n\nWeight\n0\n1\n72.00\n21.89\n45.00\n53.75\n73.00\n82.50\n110.00\n▇▂▅▂▂\n\n\nBMI\n0\n1\n26.86\n7.42\n19.95\n22.41\n24.34\n28.32\n39.91\n▇▇▁▁▅\n\n\n\n\nView(d5)\n\nLastly, I’m going to rename the “Marital status” vairable to “Marital_status” for ease of use later.\n\nd6 &lt;- d5 |&gt;\n  rename(Marital_status = `Marital status`)\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d6\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/LibraryUser/Documents/GitHub/mohammedzuber-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Introduction The dataset used in this analysis is from FiveThirtyEight’s article How Baby Boomers Get High. The data comes from the 2012 National Survey on Drug Use and Health (NSDUH) and explores substance use trends among Americans aged 50-64.\nThe analysis highlights that marijuana is the most commonly used drug in this age group, followed by prescription medications such as pain relievers and tranquilizers. These trends reflect the changing social attitudes, medical prescriptions, and generational differences in drug use. The following visualization replicates FiveThirtyEight’s graph showing the percentage of older Americans who reported drug use in the past year."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html#original-figure",
    "href": "presentation-exercise/presentation-exercise.html#original-figure",
    "title": "Presentation Exercise",
    "section": "2.1 Original figure",
    "text": "2.1 Original figure\n\n\n\nOriginal FiveThirtyEight Figure"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Placeholder file for the future R coding exercise."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#loading-and-checking-data",
    "href": "coding-exercise/coding-exercise.html#loading-and-checking-data",
    "title": "R Coding Exercise",
    "section": "1 Loading and Checking Data",
    "text": "1 Loading and Checking Data\n\n# help() function pulls up the help page for the data to see what it contains.\nhelp(gapminder) \n\nstarting httpd help server ... done\n\n# str () give us the overview of the datasets\nstr(gapminder) \n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n# summary () gives summary of data\nsummary(gapminder) \n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n#class() function to check what type of object gapminder is\nclass(gapminder) # obtaining the type of object gapminder is\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-data",
    "href": "coding-exercise/coding-exercise.html#processing-data",
    "title": "R Coding Exercise",
    "section": "2 Processing Data",
    "text": "2 Processing Data\n\n#filter african countries to make a new dataset called 'africadata'\nafricadata &lt;- gapminder %&gt;% filter(continent == \"Africa\") \n# getting an overview of the data structure  africadata\nstr(africadata) \n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n# summary of africadata\nsummary(africadata) \n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\n\n# creating two new objects for further analysis \nvariableone &lt;- africadata %&gt;% select(infant_mortality, life_expectancy) \n# obtaining the information about the structure of variableone\nstr(variableone) \n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\n# summarizing the details about variableone\nsummary(variableone) \n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n# creating another dataset with only two variables as listed\nvariabletwo &lt;- africadata %&gt;% select(population, life_expectancy) \n# obtaining the information about the structure of variabletwo\nstr(variabletwo )\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\n# obtaining the summary about the dataset variabletwo\nsummary(variabletwo)  \n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting",
    "href": "coding-exercise/coding-exercise.html#plotting",
    "title": "R Coding Exercise",
    "section": "3 Plotting",
    "text": "3 Plotting\n\n3.1 Figure 1 Scatterplot of Life Expectancy vs Infant Mortality\nThe scatterplot shows the relationship between life expectancy and infant mortality.The scattered plots shows that the low infant mortality tend to have higher life expectancy, indicating better healthcare, sanitation, and economic conditions. Whereas high infants mortality rates are associated with lower life expectancy, possibly due to poor healthcare access, malnutrition, and economic hardships.\n\n# Create scatterplot life expectancy as a function of infant mortality\nggplot(variableone, aes(x = log(infant_mortality), y = life_expectancy)) + \n  geom_point(color = \"green\", alpha = 0.7) +\nlabs(\n    title = \"Scatterplot of Life Expectancy vs Infant Mortality\",\n    x = \"Infant Mortality\",\n    y = \"Life Expectancy\"\n  ) +\n  theme_minimal()\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n3.2 Figure 2: Scatterplot of Life Expectancy vs Population Size\nThe scatterplot depicts the relationship between life expectancy and population size. There is some positive correlation between population size and life expectancy, but it is not strongly linear. Larger population might be associated with better healthcare infrastructure, economic growth, and development, leading to higher life expectancy.However, some small countries still exhibit high life expectancy, indicating that factors like healthcare access and living conditions play a crucial role beyond population size.\n\n# Create scatterplot \nggplot(variabletwo, aes(x = log(population), y = life_expectancy)) + \n  geom_point(color = \"purple\", alpha = 0.7) +\nlabs(\n    title = \"Scatterplot of Life Expectancy vs Population Size\",\n    x = \"Population Size (Log Scale)\",\n    y = \"Life Expectancy\"\n  ) +\n  theme_minimal()\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\n3.3 Table 1: Summary of missing values for infant mortality\n\n# Calculating the number of missing values for infant mortality by year\nmissing_data &lt;- africadata %&gt;% group_by(year) %&gt;% summarize( missing_infant_mortality = sum(is.na(infant_mortality)), \n    total_observations = n(), #this will gives us the total observations\n  )\n\n# printing the result \nprint(missing_data)\n\n# A tibble: 57 × 3\n    year missing_infant_mortality total_observations\n   &lt;int&gt;                    &lt;int&gt;              &lt;int&gt;\n 1  1960                       10                 51\n 2  1961                       17                 51\n 3  1962                       16                 51\n 4  1963                       16                 51\n 5  1964                       15                 51\n 6  1965                       14                 51\n 7  1966                       13                 51\n 8  1967                       11                 51\n 9  1968                       11                 51\n10  1969                        7                 51\n# ℹ 47 more rows\n\n\n\n# Let's create new dataset containing only the year 2000\ndata_new &lt;- africadata %&gt;% filter(year == 2000)\nstr(data_new)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(data_new)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\n\n\n3.4 Figure 3: Infant mortality vs life expectancy scatterplot for 2000\n\n# Creating a scatterplot \nggplot(data_new, aes(x = log(infant_mortality), y = life_expectancy)) + \n  geom_point(color = \"brown\", alpha = 0.7) + labs(\n    title = \"Scatterplot of Life Expectancy vs Infant Mortality for year 2000\",\n    x = \"Infant Mortality\",\n    y = \"Life Expectancy\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n3.5 Figure 4: Infany mortality vs population catterplot for year 2000\n\n# Creating scatterplot \nggplot(data_new, aes(x = log(population), y = life_expectancy)) + \n  geom_point(color = \"black\", alpha = 0.7) + labs(\n    title = \"Scatterplot of Life Expectancy vs Population Size for the year 2000\",\n    x = \"Population Size (Log Scale)\",\n    y = \"Life Expectancy\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#fitting-a-linear-model",
    "href": "coding-exercise/coding-exercise.html#fitting-a-linear-model",
    "title": "R Coding Exercise",
    "section": "4 Fitting a linear model",
    "text": "4 Fitting a linear model\nIn the first model, the p-value is less than 0.05. Therefore, this suggest that infant mortality is a strong predictor of life expectancy.the R-squared of 0.4701 means that 47% of the variation in life expectancy is explained by infant mortality.\nIn the second model, the p-value is greater than 0.05. Therefore, there is no strong statistical evidence to suggest that population size is a significant predictor of life expectancy.The R-squared of 0.01044 means that 1% of the variation in life expectancy is explained by population size, which is weak.\n\n# Fitting the linear model\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, data = data_new)\nfit2 &lt;- lm(life_expectancy ~ log(population), data = data_new)\n# summary of the model\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = data_new)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nsummary(fit2) \n\n\nCall:\nlm(formula = life_expectancy ~ log(population), data = data_new)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.113  -4.809  -1.554   3.907  18.863 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      65.3243    12.5203   5.217 3.65e-06 ***\nlog(population)  -0.5711     0.7943  -0.719    0.476    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.502 on 49 degrees of freedom\nMultiple R-squared:  0.01044,   Adjusted R-squared:  -0.009755 \nF-statistic: 0.517 on 1 and 49 DF,  p-value: 0.4755\n\n\nThis section contributed by Pooja Gokhale. Look at the dataset murders from dslabs\n\n#Load the required libraries\nlibrary(dslabs)\nlibrary(tidyverse)\n\n#Look at the murders dataset\nhelp(murders)\n\n#Look at data structure and summary of the murders dataset\nstr(murders)\n\n'data.frame':   51 obs. of  5 variables:\n $ state     : chr  \"Alabama\" \"Alaska\" \"Arizona\" \"Arkansas\" ...\n $ abb       : chr  \"AL\" \"AK\" \"AZ\" \"AR\" ...\n $ region    : Factor w/ 4 levels \"Northeast\",\"South\",..: 2 4 4 2 4 4 1 2 2 2 ...\n $ population: num  4779736 710231 6392017 2915918 37253956 ...\n $ total     : num  135 19 232 93 1257 ...\n\nsummary(murders)\n\n    state               abb                      region     population      \n Length:51          Length:51          Northeast    : 9   Min.   :  563626  \n Class :character   Class :character   South        :17   1st Qu.: 1696962  \n Mode  :character   Mode  :character   North Central:12   Median : 4339367  \n                                       West         :13   Mean   : 6075769  \n                                                          3rd Qu.: 6636084  \n                                                          Max.   :37253956  \n     total       \n Min.   :   2.0  \n 1st Qu.:  24.5  \n Median :  97.0  \n Mean   : 184.4  \n 3rd Qu.: 268.0  \n Max.   :1257.0  \n\n\nExplore data from south region states\n\nmurdersouth = murders|&gt;\n  filter (region == \"South\")\n\n#Look at the data structure and summary\nstr(murdersouth)\n\n'data.frame':   17 obs. of  5 variables:\n $ state     : chr  \"Alabama\" \"Arkansas\" \"Delaware\" \"District of Columbia\" ...\n $ abb       : chr  \"AL\" \"AR\" \"DE\" \"DC\" ...\n $ region    : Factor w/ 4 levels \"Northeast\",\"South\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ population: num  4779736 2915918 897934 601723 19687653 ...\n $ total     : num  135 93 38 99 669 376 116 351 293 120 ...\n\nsummary(murdersouth)\n\n    state               abb                      region     population      \n Length:17          Length:17          Northeast    : 0   Min.   :  601723  \n Class :character   Class :character   South        :17   1st Qu.: 2967297  \n Mode  :character   Mode  :character   North Central: 0   Median : 4625364  \n                                       West         : 0   Mean   : 6804378  \n                                                          3rd Qu.: 8001024  \n                                                          Max.   :25145561  \n     total      \n Min.   : 27.0  \n 1st Qu.:111.0  \n Median :207.0  \n Mean   :246.8  \n 3rd Qu.:293.0  \n Max.   :805.0  \n\n\nWe can see that there are 17 states that are considered a part of the southern US. The total murders in the complete dataset ranged from 2 to 1257. In the filtered dataset, they range from 27 to 805.\nLet’s look at a scatterplot of total murders vs population in the southern states.\n\nggplot(murdersouth, aes(x=population, y=total)) + geom_point(color=\"red\") + scale_x_log10()\n\n\n\n\n\n\n\n\nAs expected, the murders increase with an increase in the population.\nLet’s look at a scatterplot of total murders vs individual states in the southern US.\n\nggplot(murdersouth, aes(x=abb, y=total)) + geom_point(color=\"blue\") \n\n\n\n\n\n\n\n\nWe see that Florida and Texas have relatively higher number of murders compared to the other southern states.\nStatistical models to predict total number of murders\n\n#Based on population\nfit1 = lm(total~population, data=murdersouth)\nsummary(fit1)\n\n\nCall:\nlm(formula = total ~ population, data = murdersouth)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-64.58 -40.08 -16.60  28.53 175.41 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 3.351e+01  2.209e+01   1.517     0.15    \npopulation  3.134e-05  2.378e-06  13.178 1.19e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 61.99 on 15 degrees of freedom\nMultiple R-squared:  0.9205,    Adjusted R-squared:  0.9152 \nF-statistic: 173.7 on 1 and 15 DF,  p-value: 1.189e-09\n\n\nWe can see that the p-value for population is less than 0.05, thus population is a useful predictor of total number of murders in the state. The R squared is 0.9205, indicating that this is a good model."
  },
  {
    "objectID": "aboutme.html#background-and-training",
    "href": "aboutme.html#background-and-training",
    "title": "About me",
    "section": "Background and Training",
    "text": "Background and Training\nHello! My name is Mohammed Zuber, and I am currently a second year Ph.D. student in Pharmaceutical Health Services, Outcomes, and Policy at the University of Georgia. I hold a Doctor of Pharmacy (PharmD) degree from Rajiv Gandhi University of Health Sciences, India. My journey in healthcare and outcomes research has been fueled by my passion for improving patient care through evidence-based solutions."
  },
  {
    "objectID": "aboutme.html#professional-experience",
    "href": "aboutme.html#professional-experience",
    "title": "About me",
    "section": "Professional Experience",
    "text": "Professional Experience\nPrior to starting my Ph.D., I worked as a Global Health Outcomes Scientist at Eli Lilly India, where I contributed to: Conducting systematic literature reviews and network meta-analyses. Supporting Health Technology Assessments (HTA) for oncology therapies. Developing AMCP dossiers for oncology products in Chronic Lymphocytic Leukemia, Non-Small Cell Lung Cancer, and Breast Cancer.\nThis experience strengthened my expertise in health economics, outcomes research, and pharmacoepidemiology."
  },
  {
    "objectID": "aboutme.html#research-interests",
    "href": "aboutme.html#research-interests",
    "title": "About me",
    "section": "Research Interests",
    "text": "Research Interests\nMy research interests include the following areas:\n\nHealth Economics and Outcomes Research (HEOR): Understanding the economic implications of healthcare interventions and their impact on patient outcomes.\nHealth Technology Assessment (HTA): Evaluating the clinical, economic, and social value of health technologies to inform decision-making.\nPharmacoepidemiologic Research: Investigating the real-world use, safety, and effectiveness of medications using large healthcare databases such as MarketScan and SEER.\nSystematic Literature Review and Meta-analysis: Synthesizing evidence from multiple studies to provide actionable insights for clinical and policy decisions.\nEvidence-Based Medicine: Integrating clinical expertise with the best available evidence to improve patient care."
  },
  {
    "objectID": "aboutme.html#programming-and-analytical-skills",
    "href": "aboutme.html#programming-and-analytical-skills",
    "title": "About me",
    "section": "Programming and Analytical Skills",
    "text": "Programming and Analytical Skills\nI have prior experience in the following tools and platforms:\nStatistical Analysis: SAS, R, and STATA.\nData Management: MarketScan, and DistillerSR."
  },
  {
    "objectID": "aboutme.html#achievements",
    "href": "aboutme.html#achievements",
    "title": "About me",
    "section": "Achievements",
    "text": "Achievements\n\n2024 Publications\n\nZuber M, Borate SN, Gokhale P, et al. Bruton tyrosine kinase inhibitor monotherapy in B-cell lymphoma and risk of infection: A systematic review and meta-analysis of randomized controlled trials. Hematological Oncology. 2024. DOI: 10.1002/hon.3308\nZuber M, Akkala S, Li N, Veettil SK, Tan CJ, Villa Zapata L. Efficacy and Effectiveness Outcomes of Treatments for Double-Exposed Chronic Lymphocytic Leukemia and Small Lymphocytic Lymphoma Patients: A Systematic Literature Review. Cancer Medicine. 2024. DOI: 10.1002/cam4.70258\nZuber M, Akkala S, Ahmad A, Villa Zapata L. Efficacy outcomes of treatments for double-exposed chronic lymphocytic leukemia/small lymphocytic lymphoma: A systematic literature review. Journal of Clinical Oncology. 2024;42(16 suppl):e19019.\nZuber M, Borate SN, Gokhale P, Yerubandi A, Bhuiya NM, Rawal S, Young HN. Bruton’s Tyrosine Kinase Inhibitors in B-Cell Lymphoma and Risk of Infection: A Systematic Review and Meta-Analysis of Randomized Controlled Trials. Value in Health. 2024;27(6):S21-2.\nShanmugham S, Lee EL, Kumar S, Zuber M, et al. Effectiveness of low to moderate potency topical corticosteroids for phimosis resolution in children: Results of a network meta-analysis. International Urology and Nephrology. 2024.\nShanmugham S, Zuber M, Chan JE, et al. Efficacy of antidepressants in functional dyspepsia: Systematic review and meta-analysis with trial sequential analysis of randomized controlled trials. Indian Journal of Gastroenterology. 2024. DOI: 10.1007/s12664-024-01648-5\nAkkala S, Zuber M, Atta J, et al. Influence of Socioeconomic Status on Breast Cancer Treatment in the US: Preliminary Results from a Systematic Literature Review. Value in Health. 2024;27(6):S23.\nBorate SN, Zuber M, Gokhale P. Machine Learning Applications in Predicting the Onset of Psoriatic Arthritis: A Systematic Review. Value in Health. 2024;27(6):S266."
  },
  {
    "objectID": "aboutme.html#what-i-hope-to-learn",
    "href": "aboutme.html#what-i-hope-to-learn",
    "title": "About me",
    "section": "What I Hope to Learn",
    "text": "What I Hope to Learn\nThrough this course, I aim to:\n\nEnhance my data visualization skills using modern tools like Quarto.\nImprove my ability to create reproducible research outputs."
  },
  {
    "objectID": "aboutme.html#a-fun-fact-about-me",
    "href": "aboutme.html#a-fun-fact-about-me",
    "title": "About me",
    "section": "A Fun Fact About Me",
    "text": "A Fun Fact About Me\nI love playing field hockey and was honored to captain my university’s hockey team at the All India University South Zone Championship. Balancing academics and sports taught me resilience and teamwork."
  },
  {
    "objectID": "aboutme.html#a-cool-resource",
    "href": "aboutme.html#a-cool-resource",
    "title": "About me",
    "section": "A Cool Resource",
    "text": "A Cool Resource\nI highly recommend exploring this resource:\n\nCochrane Handbook: Network Meta-Analysis\nThis chapter explains the methods and utility of network meta-analysis, which estimates the relative effects of multiple interventions and provides a ranking hierarchy. It’s an essential read for anyone interested in systematic reviews and meta-analysis.\nRead the Cochrane Handbook chapter"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "CDC Data Exercise",
    "section": "",
    "text": "The FDA Adverse Event Reporting System (FAERS) is a publicly available database maintained by the U.S. Food and Drug Administration (FDA). It contains adverse event reports, medication error reports, and product quality complaints submitted by healthcare professionals, manufacturers, and consumers. This data is used for post market surveillance of drug safety.\n\n\n\nThe dataset is obtained from FAERS, which collects reports on suspected adverse drug reactions. The official FAERS database can be accessed at the FDA’s website:\nFDA FAERS Public Dashboard\n\n\n\nThe uploaded FAERS dataset consists of 21 columns that provide detailed information about adverse drug reactions, including:\n\nCase ID: Unique identifier for each reported case.\nSuspect Product Names: Drugs suspected to have caused an adverse event.\nSuspect Product Active Ingredients: Active pharmaceutical ingredients in the reported drugs.\nReason for Use: The medical condition(s) for which the drug was prescribed.\nReactions: Reported adverse events.\nSerious: Whether the adverse event is classified as serious.\nOutcomes: The final outcome of the reported event (e.g., hospitalization, death).\nSex: Gender of the patient.\nEvent Date: When the adverse event was reported.\nPatient Age & Weight: Demographics of the affected individual.\nReporter Type: Whether the report was submitted by a healthcare professional or a consumer.\nConcomitant Product Names: Other drugs the patient was taking at the same time.\nCountry where Event Occurred: Location of the reported adverse event.\nDates of FDA and Manufacturer Report Receipt: Timeline of when the report was processed.\n\nThis dataset is valuable for analyzing post-market drug safety, identifying trends in adverse events, and informing regulatory actions."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#faers-data-description",
    "href": "cdcdata-exercise/cdcdata-exercise.html#faers-data-description",
    "title": "CDC Data Exercise",
    "section": "",
    "text": "The FDA Adverse Event Reporting System (FAERS) is a publicly available database maintained by the U.S. Food and Drug Administration (FDA). It contains adverse event reports, medication error reports, and product quality complaints submitted by healthcare professionals, manufacturers, and consumers. This data is used for post market surveillance of drug safety."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#source-of-data",
    "href": "cdcdata-exercise/cdcdata-exercise.html#source-of-data",
    "title": "CDC Data Exercise",
    "section": "",
    "text": "The dataset is obtained from FAERS, which collects reports on suspected adverse drug reactions. The official FAERS database can be accessed at the FDA’s website:\nFDA FAERS Public Dashboard"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#contents-of-the-dataset",
    "href": "cdcdata-exercise/cdcdata-exercise.html#contents-of-the-dataset",
    "title": "CDC Data Exercise",
    "section": "",
    "text": "The uploaded FAERS dataset consists of 21 columns that provide detailed information about adverse drug reactions, including:\n\nCase ID: Unique identifier for each reported case.\nSuspect Product Names: Drugs suspected to have caused an adverse event.\nSuspect Product Active Ingredients: Active pharmaceutical ingredients in the reported drugs.\nReason for Use: The medical condition(s) for which the drug was prescribed.\nReactions: Reported adverse events.\nSerious: Whether the adverse event is classified as serious.\nOutcomes: The final outcome of the reported event (e.g., hospitalization, death).\nSex: Gender of the patient.\nEvent Date: When the adverse event was reported.\nPatient Age & Weight: Demographics of the affected individual.\nReporter Type: Whether the report was submitted by a healthcare professional or a consumer.\nConcomitant Product Names: Other drugs the patient was taking at the same time.\nCountry where Event Occurred: Location of the reported adverse event.\nDates of FDA and Manufacturer Report Receipt: Timeline of when the report was processed.\n\nThis dataset is valuable for analyzing post-market drug safety, identifying trends in adverse events, and informing regulatory actions."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-age",
    "href": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-age",
    "title": "CDC Data Exercise",
    "section": "3.1 Distribution of Patient Age",
    "text": "3.1 Distribution of Patient Age\n\nggplot(data, aes(x = `Patient Age`)) +\n  geom_histogram(binwidth = 5, fill = \"blue\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Patient Age\", x = \"Age\", y = \"Frequency\") +\n  theme_minimal()"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-weight",
    "href": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-weight",
    "title": "CDC Data Exercise",
    "section": "3.2 Distribution of Patient Weight",
    "text": "3.2 Distribution of Patient Weight\n\nggplot(data, aes(x = `Patient Weight`)) +\n  geom_histogram(binwidth = 5, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Patient Weight\", x = \"Weight (kg)\", y = \"Frequency\") +\n  theme_minimal()"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-sex",
    "href": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-sex",
    "title": "CDC Data Exercise",
    "section": "3.3 Percentage distribution of Sex",
    "text": "3.3 Percentage distribution of Sex\n\nsex_distribution &lt;- data %&gt;%\n  count(Sex) %&gt;%\n  mutate(Percentage = round(n / sum(n) * 100, 2))\n\nprint(\"Percentage Distribution of Sex:\")\n\n[1] \"Percentage Distribution of Sex:\"\n\nprint(sex_distribution)\n\n# A tibble: 3 × 3\n  Sex               n Percentage\n  &lt;chr&gt;         &lt;int&gt;      &lt;dbl&gt;\n1 Female           36      26.7 \n2 Male             98      72.6 \n3 Not Specified     1       0.74"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#bar-plot-for-sex-distribution",
    "href": "cdcdata-exercise/cdcdata-exercise.html#bar-plot-for-sex-distribution",
    "title": "CDC Data Exercise",
    "section": "3.4 Bar plot for Sex distribution",
    "text": "3.4 Bar plot for Sex distribution\n\nggplot(data, aes(x = Sex, fill = Sex)) +\n  geom_bar() +\n  labs(title = \"Distribution of Sex\", x = \"Sex\", y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#frequency-table-for-top-5-adverse-reactions",
    "href": "cdcdata-exercise/cdcdata-exercise.html#frequency-table-for-top-5-adverse-reactions",
    "title": "CDC Data Exercise",
    "section": "3.5 Frequency Table for Top 5 Adverse Reactions",
    "text": "3.5 Frequency Table for Top 5 Adverse Reactions\n\nreaction_counts &lt;- data %&gt;%\n  count(Reactions, name = \"Frequency\") %&gt;%\n  arrange(desc(Frequency)) %&gt;%\n  top_n(5, wt = Frequency)\n\nprint(\"Top 5 Most Frequent Adverse Reactions:\")\n\n[1] \"Top 5 Most Frequent Adverse Reactions:\"\n\nprint(reaction_counts)\n\n# A tibble: 5 × 2\n  Reactions Frequency\n  &lt;chr&gt;         &lt;int&gt;\n1 Covid-19         18\n2 Pneumonia        10\n3 Death             7\n4 Infection         4\n5 Influenza         4"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-outcomes",
    "href": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-outcomes",
    "title": "CDC Data Exercise",
    "section": "3.6 Percentage distribution of Outcomes",
    "text": "3.6 Percentage distribution of Outcomes\n\noutcome_distribution &lt;- data %&gt;%\n  count(Outcomes) %&gt;%\n  mutate(Percentage = round(n / sum(n) * 100, 2))\n\nprint(\"Percentage Distribution of Outcomes:\")\n\n[1] \"Percentage Distribution of Outcomes:\"\n\nprint(outcome_distribution)\n\n# A tibble: 6 × 3\n  Outcomes                  n Percentage\n  &lt;chr&gt;                 &lt;int&gt;      &lt;dbl&gt;\n1 Died                     16      11.8 \n2 Died;Hospitalized         4       2.96\n3 Hospitalized            102      75.6 \n4 Hospitalized;Died         3       2.22\n5 Hospitalized;Disabled     1       0.74\n6 Non-Serious               9       6.67"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#bar-plot-for-outcome-frequencies",
    "href": "cdcdata-exercise/cdcdata-exercise.html#bar-plot-for-outcome-frequencies",
    "title": "CDC Data Exercise",
    "section": "3.7 Bar plot for Outcome frequencies",
    "text": "3.7 Bar plot for Outcome frequencies\n\nggplot(data, aes(x = Outcomes, fill = Outcomes)) +\n  geom_bar() +\n  labs(title = \"Distribution of Outcomes\", x = \"Outcome\", y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mohammed Zuber’s website and data analysis portfolio",
    "section": "",
    "text": "Hello\nWelcome to my website and data analysis portfolio for the Modern Applied Data Analysis (MADA) course.\n\nPlease use the Menu Bar above to look around.\nHave fun!"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda2.html",
    "href": "starter-analysis-exercise/code/eda-code/eda2.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Users/LibraryUser/Documents/GitHub/mohammedzuber-MADA-portfolio\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata2.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             8     \nNumber of columns          5     \n_______________________          \nColumn type frequency:           \n  character                1     \n  factor                   1     \n  numeric                  3     \n________________________         \nGroup variables            None  \n\n── Variable type: character ────────────────────────────────────────────────────\n  skim_variable  n_missing complete_rate min max empty n_unique whitespace\n1 Marital_status         0             1   6   8     0        3          0\n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 2, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean    sd    p0   p25   p50   p75\n1 Height                0             1 164.  15.6  133   156.  166   176. \n2 Weight                0             1  72   21.9   45    53.8  73    82.5\n3 BMI                   0             1  26.9  7.42  20.0  22.4  24.3  28.3\n   p100 hist \n1 180   ▂▁▅▅▇\n2 110   ▇▂▅▂▂\n3  39.9 ▇▇▁▁▅\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\nNow, I’ll add a boxplot of height by marital status.\n\np5 &lt;- mydata %&gt;% ggplot(aes(x = Marital_status, y = Height, fill = Marital_status)) + geom_boxplot()\nplot(p5)\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-by-marital-status.png\")\nggsave(filename = figure_file, plot=p5) \n\nSaving 7 x 5 in image\n\n\nNow, I’ll add a scatterplot of weight and BMI with a trendline on it.\n\np6 &lt;- mydata %&gt;% ggplot(aes(x=BMI, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p6)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-and-bmi.png\")\nggsave(filename = figure_file, plot=p6) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at C:/Users/LibraryUser/Documents/GitHub/mohammedzuber-MADA-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Mohammed Zuber's Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#setting-the-seeds-and-observation-number",
    "href": "cdcdata-exercise/cdcdata-exercise.html#setting-the-seeds-and-observation-number",
    "title": "CDC Data Exercise",
    "section": "5.1 Setting the seeds and observation number",
    "text": "5.1 Setting the seeds and observation number\nIn this section we will create the baseline for generating our synthetic data. We will set the seed so that we can create reproducible data, and we will also set the number of observations to 135 as in the original dataset above.\n\n# Setting a seed for reproducibility of data\nset.seed(100) # we will also set seed individually\n# Definining the number of observations (patients) to generate\nobs &lt;- 135"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#creating-an-empty-dataset",
    "href": "cdcdata-exercise/cdcdata-exercise.html#creating-an-empty-dataset",
    "title": "CDC Data Exercise",
    "section": "5.2 Creating an empty Dataset",
    "text": "5.2 Creating an empty Dataset\nWe will then create an empty dataset with just variable names and their data structure. We will make sure that every variable has the same number of obserations i.e 135.\n\n# Create an empty data frame with placeholders for variables\nsynthetic &lt;- data.frame(\n  Weight = numeric(obs),#patient's weight\n  Age = numeric(obs), #patient's age\n  Sex = character(obs), #patient's sex\n  Reaction = character(obs), #reported adverse events\n  Outcome = character(obs), # final outcome of reported events\n  activeIngredient = character(obs),\n  Reason = character(obs) #reason for use\n)"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#visualizing-the-synthetic-data",
    "href": "cdcdata-exercise/cdcdata-exercise.html#visualizing-the-synthetic-data",
    "title": "CDC Data Exercise",
    "section": "4.3 Visualizing the Synthetic data",
    "text": "4.3 Visualizing the Synthetic data\nNow we will visualize the synthetic data following the simillar methodologies by the original author.\n\n4.3.1 Distribution of Patient Age\n\nggplot(synthetic, aes(x = Age)) +\n  geom_histogram(binwidth = 2, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Patient Age\", x = \"Age\", y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThe distribution looks somewhat simillar to the original data for Age\n\n\n4.3.2 Distribution of Patient Weight\n\nggplot(synthetic, aes(x = Weight)) +\n  geom_histogram(binwidth = 5, fill = \"cyan\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Patient Weight\", x = \"Weight (kg)\", y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThe distribution looks somewhat simillar to the original distribution of Weight.\n\n\n4.3.3 Percentage distribution of Sex\n\nsex_distribution &lt;- synthetic %&gt;%\n  count(Sex) %&gt;%\n  mutate(Percentage = round(n / sum(n) * 100, 2))\n\nprint(\"Percentage Distribution of Sex:\")\n\n[1] \"Percentage Distribution of Sex:\"\n\nprint(sex_distribution)\n\n            Sex  n Percentage\n1        Female 35      25.93\n2          Male 99      73.33\n3 Not Specified  1       0.74\n\n\nThe distribution of Sex has been set similar to original distribution because we knew the actual frequencies.\n\nggplot(synthetic, aes(x = Sex, fill = Sex)) +\n  geom_bar() +\n  labs(title = \"Distribution of Sex\", x = \"Sex\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThe similarity in dataset can be verified by the histogram as well.\n\n\n4.3.4 Frequency Table for Top 5 Adverse Reactions\nI tried multiple times but could not assign the frequencies properly for the values as there we 84 different values.\n\n# Tabulate the variable Reaction and arrange by descending frequency\nreaction_counts &lt;- synthetic %&gt;%\n  count(Reaction) %&gt;%               # Count occurrences of each reaction\n  arrange(desc(n))                  # Arrange by descending frequency\n\n# Print the top 5 most frequent adverse reactions\nprint(\"Top 5 Most Frequent Adverse Reactions:\")\n\n[1] \"Top 5 Most Frequent Adverse Reactions:\"\n\nprint(head(reaction_counts, 5))     # Display the top 5 reactions\n\n  Reaction   n\n1          135\n\n\n\n\n4.3.5 Percentage distribution of Outcomes\n\noutcome_distribution &lt;- synthetic %&gt;%\n  count(Outcome) %&gt;%\n  mutate(Percentage = round(n / sum(n) * 100, 2))\n\nprint(\"Percentage Distribution of Outcomes:\")\n\n[1] \"Percentage Distribution of Outcomes:\"\n\nprint(outcome_distribution)\n\n            Outcome   n Percentage\n1              Died  11       8.15\n2 Died;Hospitalized   5       3.70\n3      Hospitalized 108      80.00\n4 Hospitalized;Died   2       1.48\n5       Non-Serious   9       6.67\n\n\nWe are also able to replicate the percentage distribution of the Outcomes as we know the actual frequencies and percentage.\n\n\n4.3.6 Bar plot for Outcome frequencies\n\nggplot(synthetic, aes(x = Outcome, fill = Outcome)) +\n  geom_bar() +\n  labs(title = \"Distribution of Outcomes\", x = \"Outcome\", y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nThe similarity in frequencies of outcomes can be verified through the colored histogram as well."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-age-1",
    "href": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-age-1",
    "title": "CDC Data Exercise",
    "section": "6.2 Distribution of Patient Age",
    "text": "6.2 Distribution of Patient Age\n\nggplot(synthetic, aes(x = Age)) +\n  geom_histogram(binwidth = 2, fill = \"green\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Patient Age\", x = \"Age\", y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThe distribution looks somewhat simillar to the original data for Age"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-weight-1",
    "href": "cdcdata-exercise/cdcdata-exercise.html#distribution-of-patient-weight-1",
    "title": "CDC Data Exercise",
    "section": "6.3 Distribution of Patient Weight",
    "text": "6.3 Distribution of Patient Weight\n\nggplot(synthetic, aes(x = Weight)) +\n  geom_histogram(binwidth = 5, fill = \"cyan\", color = \"black\", alpha = 0.7) +\n  labs(title = \"Distribution of Patient Weight\", x = \"Weight (kg)\", y = \"Frequency\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThe distribution looks somewhat simillar to the original distribution of Weight."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-sex-1",
    "href": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-sex-1",
    "title": "CDC Data Exercise",
    "section": "6.4 Percentage distribution of Sex",
    "text": "6.4 Percentage distribution of Sex\n\nsex_distribution &lt;- synthetic %&gt;%\n  count(Sex) %&gt;%\n  mutate(Percentage = round(n / sum(n) * 100, 2))\n\nprint(\"Percentage Distribution of Sex:\")\n\n[1] \"Percentage Distribution of Sex:\"\n\nprint(sex_distribution)\n\n            Sex  n Percentage\n1        Female 35      25.93\n2          Male 99      73.33\n3 Not Specified  1       0.74\n\n\nThe distribution of Sex has been set similar to original distribution because we knew the actual frequencies.\n\nggplot(synthetic, aes(x = Sex, fill = Sex)) +\n  geom_bar() +\n  labs(title = \"Distribution of Sex\", x = \"Sex\", y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThe similarity in dataset can be verified by the histogram as well."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#frequency-table-for-top-5-adverse-reactions-1",
    "href": "cdcdata-exercise/cdcdata-exercise.html#frequency-table-for-top-5-adverse-reactions-1",
    "title": "CDC Data Exercise",
    "section": "6.5 Frequency Table for Top 5 Adverse Reactions",
    "text": "6.5 Frequency Table for Top 5 Adverse Reactions\n\nreaction_counts &lt;- synthetic %&gt;%\n  count(Reaction, name = \"Frequency\") %&gt;%\n  arrange(desc(Frequency)) %&gt;%\n  top_n(5, wt = Frequency)\n\nprint(\"Top 5 Most Frequent Adverse Reactions:\")\n\n[1] \"Top 5 Most Frequent Adverse Reactions:\"\n\nprint(reaction_counts)\n\n                                                                          Reaction\n1                                                                       Bronchitis\n2                                                           Encephalopathy;Pyrexia\n3                                                               Osteomyelitis;Pain\n4                                                                     Encephalitis\n5 Fatigue;Diarrhoea;Nausea;Gastroenteritis;Headache;Malaise;Cryptococcosis;Pyrexia\n6                                                      Hypotension;Vomiting;Nausea\n7                                                                         Vomiting\n  Frequency\n1         6\n2         5\n3         5\n4         4\n5         4\n6         4\n7         4"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-outcomes-1",
    "href": "cdcdata-exercise/cdcdata-exercise.html#percentage-distribution-of-outcomes-1",
    "title": "CDC Data Exercise",
    "section": "6.6 Percentage distribution of Outcomes",
    "text": "6.6 Percentage distribution of Outcomes\n\noutcome_distribution &lt;- synthetic %&gt;%\n  count(Outcome) %&gt;%\n  mutate(Percentage = round(n / sum(n) * 100, 2))\n\nprint(\"Percentage Distribution of Outcomes:\")\n\n[1] \"Percentage Distribution of Outcomes:\"\n\nprint(outcome_distribution)\n\n                Outcome   n Percentage\n1                  Died  14      10.37\n2     Died;Hospitalized   4       2.96\n3          Hospitalized 103      76.30\n4     Hospitalized;Died   8       5.93\n5 Hospitalized;Disabled   1       0.74\n6           Non-Serious   5       3.70\n\n\nWe are also ale to replicate the percentage distribution of the Outcomes as we know the actual frequencies and percentage."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#bar-plot-for-outcome-frequencies-1",
    "href": "cdcdata-exercise/cdcdata-exercise.html#bar-plot-for-outcome-frequencies-1",
    "title": "CDC Data Exercise",
    "section": "6.7 Bar plot for Outcome frequencies",
    "text": "6.7 Bar plot for Outcome frequencies\n\nggplot(synthetic, aes(x = Outcome, fill = Outcome)) +\n  geom_bar() +\n  labs(title = \"Distribution of Outcomes\", x = \"Outcome\", y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\nThe similarity in frequencies of outcomes can be verified through the colored histogram as well."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#data-generation",
    "href": "cdcdata-exercise/cdcdata-exercise.html#data-generation",
    "title": "CDC Data Exercise",
    "section": "4.1 Data Generation",
    "text": "4.1 Data Generation\n\n4.1.1 Setting the seeds and observation number\nIn this section we will create the baseline for generating our synthetic data. We will set the seed so that we can create reproducible data, and we will also set the number of observations to 135 as in the original dataset above.\n\n# Setting a seed for reproducibility of data\nset.seed(100) # we will also set seed individually\n# Definining the number of observations (patients) to generate\nobs &lt;- 135\n\n\n\n4.1.2 Creating an empty Dataset\nWe will then create an empty dataset with just variable names and their data structure. We will make sure that every variable has the same number of obserations i.e 135.\n\n# Create an empty data frame with placeholders for variables\nsynthetic &lt;- data.frame(\n  Weight = numeric(obs),#patient's weight\n  Age = numeric(obs), #patient's age\n  Sex = character(obs), #patient's sex\n  Reaction = character(obs), #reported adverse events\n  Outcome = character(obs), # final outcome of reported events\n  activeIngredient = character(obs),\n  Reason = character(obs) #reason for use\n)"
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html#data-formation",
    "href": "cdcdata-exercise/cdcdata-exercise.html#data-formation",
    "title": "CDC Data Exercise",
    "section": "4.2 Data Formation",
    "text": "4.2 Data Formation\nNext, we will create the synthetic the data required for our excercise. We will try to control how the data is formed while we generate these data. All the variables will be generated with as per the information obtained from the table and figures above.\nWe will also make sure that the variables contain mostly similar data when generated synthetically.\n\n# Variable 1: Weight (represents the weight of the patient)\nsynthetic$Weight &lt;- round(rnorm(obs, mean = 77.58, sd = 17.27))\nsynthetic$Weight &lt;- pmax(42.22, pmin(synthetic$Weight, 125.00))\n\n# Variable 2: Age of the patient\nset.seed(100) #setting an individual seed for age\nadjusted_sd &lt;- (88 - 77.6) / 1.75 # we observe that the tails dont have enough observations so we plan our data generation accordingly\nsynthetic$Age &lt;- round(rnorm(obs, mean = 77.6, sd = adjusted_sd))\nsynthetic$Age &lt;- pmax(30, pmin(synthetic$Age, 94)) # setting max and min\n\n# Variable 3: Gender/Sex of the player\nset.seed(123) #setting an individual seed for age\nprob_female &lt;- 0.2667  # 26.67%\nprob_male &lt;- 0.7259    # 72.59%\nprob_not_specified &lt;- 0.0074  # 0.74%\n\nsynthetic$Sex &lt;- sample(\n  c(\"Male\", \"Female\", \"Not Specified\"),\n  size = obs,\n  replace = TRUE,\n  prob = c(prob_male, prob_female, prob_not_specified) # setting probability same as original\n)\n\n# Define the reaction and frequency vectors\nreaction &lt;- c(\"Covid-19\", \"Pneumonia\", \"Death\", \"Infection\", \"Influenza\",  \n              \"Abscess\", \"Appendicitis;Appendicectomy\", \"Arrhythmia\", \"Ascites\", \"Asthma\",  \n              \"Bradycardia\", \"Bronchitis\", \"Bronchitis;Infection\", \"Cholecystitis;Gastritis;Cholecystectomy\",  \n              \"Constipation\", \"Cough\", \"Covid-19;Sepsis\", \"Death;Thrombocytopenia\",  \n              \"Dehydration\", \"Dehydration;Colitis;Diarrhoea\", \"Diarrhoea\", \"Diarrhoea;Fatigue\",  \n              \"Dizziness;Vertigo\", \"Dysphagia\", \"Dyspnoea;Death\", \"Dysuria;Pyrexia\", \"Encephalitis\",  \n              \"Encephalopathy\", \"Encephalopathy;Pyrexia\", \"Epididymitis\", \"Epilepsy\", \"Erythema;Dermatitis\",  \n              \"Fall;Malaise\", \"Fatigue\", \"Fatigue;Diarrhoea;Nausea;Gastroenteritis;Headache;Malaise;Cryptococcosis;Pyrexia\",  \n              \"Fatigue;Nausea;Malnutrition;Hypophagia\", \"Giardiasis\", \"Gout\", \"Haemarthrosis\",  \n              \"Haemorrhage\", \"Hepatotoxicity\", \"Hypercreatinaemia\", \"Hyperglycaemia\", \"Hyperkalaemia\",  \n              \"Hyperkalaemia;Hyperphosphataemia\", \"Hyperphosphataemia\", \"Hypertension\", \"Hypotension\",  \n              \"Hypotension;Vomiting;Nausea\", \"Insomnia;Hypothermia;Pain\", \"Ischaemia;Infarction\",  \n              \"Neutropenia;Pericarditis\", \"Neutropenia;Pyrexia;Gastroenteritis\",  \n              \"Oedema;Paraesthesia\", \"Osteomyelitis;Pain\", \"Pancreatitis\", \"Pancreatitis;Pneumonia\",  \n              \"Pancytopenia\", \"Papilloedema\", \"Pericarditis\", \"Pharyngitis\",  \n              \"Pneumonia;Covid-19\", \"Pneumonia;Fatigue;Covid-19\", \"Pneumonia;Influenza\",  \n              \"Pneumonia;Pancreatitis\", \"Pneumonia;Pyrexia;Dyspnoea;Pneumonitis\", \"Pneumonitis\",  \n              \"Pneumonitis;Bacteraemia;Sepsis\", \"Pollakiuria\", \"Pruritus;Rash\", \"Pyrexia\",  \n              \"Pyrexia;Dysphagia\", \"Pyrexia;Influenza\", \"Rash\", \"Seizure\", \"Sepsis;Bacteraemia;Pneumonitis\",  \n              \"Sepsis;Cholelithiasis\", \"Sinusitis\", \"Splenomegaly;Lymphadenopathy;Infection;Cough;Lymphadenitis;Neutropenia\",  \n              \"Syncope\", \"Tachyarrhythmia\", \"Thrombocytopenia\", \"Thrombocytopenia;Leukopenia\", \"Vomiting\")\n\nfreq &lt;- c(18, 10, 7, 4, 4,  \n          3, 3, 3, 3, 3,  \n          0, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 0, 1, 1, 1,  \n          1, 1, 1, 0, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  \n          1, 1, 1, 1, 1,  1, 1, 1, 1, 1,\n          1, 1, 3, 4)\n\n# Create the Reaction variable as a vector\nReaction &lt;- unlist(mapply(rep, reaction, freq))\n\n\n\n# Variable 5: Outcomes\noutcomes &lt;- c(\n  \"Died\", \"Died;Hospitalized\", \"Hospitalized\", \"Hospitalized;Died\", \"Hospitalized;Disabled\", \"Non-Serious\")\npercentages &lt;- c(11.8, 2.96, 75.6, 2.22, 0.74, 6.67) # setting probability same as original\nprobabilities &lt;- percentages / 100\nsynthetic$Outcome &lt;- sample(outcomes, size = nrow(synthetic), replace = TRUE, prob = probabilities)\n\n# Variable 6: Active Ingredient\nsynthetic$activeIngredient &lt;- purrr::map_chr(sample(c(\"Ibrutinib;Obinutuzumab;Venetoclax\",\n  \"Ibrutinib;Prednisolone;Vincristine;Rituximab;Cyclophosphamide;Venetoclax;Doxorubicin Hydrochloride\",\n  \"Ibrutinib;Rituximab;Prednisolone;Cyclophosphamide;Doxorubicin Hydrochloride;Venetoclax;Vincristine Sulfate\",\n  \"Ibrutinib;Venetoclax\",\n  \"Ibrutinib;Venetoclax;Obinutuzumab\",\n  \"Obinutuzumab;Ibrutinib;Venetoclax\",\n  \"Obinutuzumab;Venetoclax\",\n  \"Obinutuzumab;Venetoclax;Bendamustine\",\n  \"Obinutuzumab;Venetoclax;Ibrutinib\",\n  \"Rituximab;Venetoclax\",\n  \"Ublituximab;Venetoclax;Umbralisib\",\n  \"Venetoclax\",\n  \"Venetoclax;Bendamustine;Obinutuzumab\",\n  \"Venetoclax;Ibrutinib\",\n  \"Venetoclax;Ibrutinib;Obinutuzumab\",\n  \"Venetoclax;Losartan Potassium\",\n  \"Venetoclax;Obinutuzumab\",\n  \"Venetoclax;Obinutuzumab;Ibrutinib\",\n  \"Venetoclax;Rituximab\"), obs, replace = TRUE), as.character)\n\n#Variable 7 : Reason\nsynthetic$Reason &lt;- purrr::map_chr(sample(c(\"Chronic Lymphocytic Leukaemia\"), obs, replace = TRUE), as.character) # all observation had this same value."
  }
]